---
- name: Home work 3
  hosts: carrier
  become: yes
  tasks:
    - name: Display Configuration Variables
      ansible.builtin.debug:
        msg:
          - "monitoring_url: localhost:3000"
    - name: Create a Docker network for monitoring
      community.docker.docker_network:
        name: monitoring_network
        driver: bridge

    - name: Run Cadvisor container
      community.docker.docker_container:
        name: cadvisor
        image: gcr.io/cadvisor/cadvisor:latest
        state: started
        restart_policy: unless-stopped
        ports:
          - 8080:8080
        volumes:
          - /:/rootfs:ro
          - /var/run:/var/run:rw
          - /sys:/sys:ro
          - /var/lib/docker/:/var/lib/docker:ro
        networks:
          - name: monitoring_network

    - name: Create folders
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
      loop:
        - "/opt/prometheus"
        - "/opt/grafana"

    - name: Copy Prometheus configs
      ansible.builtin.copy:
        src: prometheus.yaml
        dest: /opt/prometheus/prometheus.yaml

    - name: Copy Grafana dashboard
      ansible.builtin.copy:
        src: dashboard.json
        dest: /opt/grafana/dashboard.json

    - name: Copy Grafana datasource
      ansible.builtin.copy:
        src: datasource.yaml
        dest: /opt/grafana/datasource.yaml

    - name: Run Grafana container
      community.docker.docker_container:
        name: grafana
        image: grafana/grafana:latest
        state: started
        restart_policy: unless-stopped
        env:
          GF_SECURITY_ADMIN_USER: "{{ GF_SECURITY_ADMIN_USER }}"
          GF_SECURITY_ADMIN_PASSWORD: "{{ GF_SECURITY_ADMIN_PASSWORD }}"
          GF_USERS_ALLOW_SIGN_UP: "false"
          GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH: "/etc/grafana/provisioning/dashboards/dashboard.json"
        ports:
          - 3000:3000
        volumes:
          - grafana_data:/var/lib/grafana
          - /opt/grafana/datasource.yaml:/etc/grafana/provisioning/datasources/datasource.yaml:ro
          - /opt/grafana/dashboard.json:/etc/grafana/provisioning/dashboards/dashboard.json
        networks:
          - name: monitoring_network

    - name: Run Prometheus container
      community.docker.docker_container:
        name: prometheus
        image: prom/prometheus:latest
        state: started
        restart_policy: unless-stopped
        ports:
          - 9090:9090
        command:
          - --config.file=/etc/prometheus/prometheus.yml
          - --storage.tsdb.path=/prometheus
        volumes:
          - /opt/prometheus/prometheus.yaml:/etc/prometheus/prometheus.yml:ro
          - prometheus_data:/prometheus
        networks:
          - name: monitoring_network