---
- name: Home work 4
  hosts: carrier
  become: yes
  tasks:
    - name: Display Configuration Variables
      ansible.builtin.debug:
        msg:
          - "wordpress: True" # True or False
          - "wordpress_port: 80" # 80 or 8080 or whatewer
          - "wordpress_db_name: {{ mariadb_and_wp_vars.database }}" # WP database name
          - "db1_host: mariadb-master" # container name
          - "db2_host: mariadb-slave-1" # container name
          - "db3_host: mariadb-slave-2" # container name
          - "db4_host: mariadb-slave-3" # container name
          - "db5_host: mariadb-slave-4" # container name
          - "db_pass: {{ mariadb_vars.root_password }}" # root password for DBs
          - "loadbalancer: haproxy" # container name
          - "monitoring_url: localhost:3000"
    - name: Ensure MariaDB volumes exist
      community.docker.docker_volume:
        name: "{{ item.volume }}"
        state: present
      loop: "{{ mariadb_vars.mariadb_slaves }}"

    - name: Run additional MariaDB-Slave Docker containers joining Galera cluster
      community.docker.docker_container:
        name: "{{ item.name }}"
        image: bitnami/mariadb-galera:latest
        state: started
        restart_policy: unless-stopped
        volumes:
          - "{{ item.volume }}:/var/lib/mysql"
        networks:
          - name: mariadb_network
        env:
          MARIADB_GALERA_MARIABACKUP_PASSWORD: "{{ mariadb_vars.backup_password }}"
          MARIADB_ROOT_PASSWORD: "{{ mariadb_vars.root_password }}"
          MARIADB_GALERA_CLUSTER_NAME: "{{ mariadb_vars.galera_cluster }}"
          MARIADB_GALERA_CLUSTER_ADDRESS: "gcomm://mariadb-master"
          MARIADB_REPLICATION_USER: "{{ mariadb_vars.replication_user }}"
          MARIADB_REPLICATION_PASSWORD: "{{ mariadb_vars.replication_password }}"
      loop: "{{ mariadb_vars.mariadb_slaves }}"

    - name: Create folder
      ansible.builtin.file:
        path: /opt/haproxy
        state: directory
        mode: '0755'

    - name: Copy Haproxy config
      ansible.builtin.copy:
        src: haproxy.cfg
        dest: /opt/haproxy/haproxy.cfg

    - name: Run Haproxy
      community.docker.docker_container:
        name: haproxy
        image: haproxy:latest
        state: started
        restart_policy: unless-stopped
        volumes:
          - /opt/haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
        networks:
          - name: mariadb_network
          - name: wp_network

    - name: Stop Wordpress container
      community.docker.docker_container:
        name: wordpress
        state: stopped

    - name: Run Wordpress Docker container and connect it to Haproxy
      community.docker.docker_container:
        name: wordpress
        image: wordpress:latest
        state: started
        restart_policy: unless-stopped
        env:
          WORDPRESS_DB_HOST: "{{ wp_vars.db_host }}"
          WORDPRESS_DB_USER: "{{ mariadb_and_wp_vars.user }}"
          WORDPRESS_DB_PASSWORD: "{{ mariadb_and_wp_vars.password }}"
          WORDPRESS_DB_NAME: "{{ mariadb_and_wp_vars.database }}"
        ports:
          - "80:80"
        networks:
          - name: wp_network
        volumes:
          - "wordpress_data:/var/www/html/"